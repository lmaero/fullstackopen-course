{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","StrictMode","Fragment","className","content","onClick","Notification","message","baseUrl","notesServices","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","autoFocus","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b5e4720.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: '16',\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important';\n\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <li className='note'>\n          {note.content}\n          <button onClick={toggleImportance}>{label}</button>\n        </li>\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default Note;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) return null;\n\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <div className='error'>{message}</div>\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst notesServices = { getAll, create, update };\nexport default notesServices;\n","import React, { useEffect, useState } from 'react';\nimport Footer from './components/Footer';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already deleted from server`,\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <div>\n          <h1>Notes</h1>\n          <Notification message={errorMessage} />\n\n          <div>\n            <button onClick={() => setShowAll(!showAll)}>\n              show {showAll ? 'important' : 'all'}\n            </button>\n          </div>\n\n          <ul>\n            {notesToShow.map((note) => (\n              <Note\n                key={note.id}\n                note={note}\n                toggleImportance={() => toggleImportanceOf(note.id)}\n              />\n            ))}\n          </ul>\n\n          <form onSubmit={addNote}>\n            <input autoFocus value={newNote} onChange={handleNoteChange} />\n            <button type='submit'>save</button>\n          </form>\n        </div>\n\n        <Footer />\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}