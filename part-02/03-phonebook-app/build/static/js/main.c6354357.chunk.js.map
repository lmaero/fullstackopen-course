{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","StrictMode","Fragment","autoFocus","value","onChange","Notification","message","type","className","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","Person","person","deletePerson","name","number","onClick","Persons","filterNumbersList","map","baseUrl","personsService","getAll","axios","get","then","response","data","create","newPerson","post","id","delete","update","updatedPerson","put","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","initialPersons","showNotification","setTimeout","event","target","preventDefault","existingContact","find","p","toLowerCase","isUpdateConfirmed","window","confirm","originalPerson","personObject","returnedPerson","catch","updatePerson","concat","includes","ReactDOM","render","document","getElementById"],"mappings":"iNAeeA,EAbA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,mBACxB,OACE,cAAC,IAAMC,WAAP,UACE,cAAC,IAAMC,SAAP,UACE,qDACqB,IACnB,uBAAOC,WAAS,EAACC,MAAOL,EAAQM,SAAUL,YCMrCM,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC/B,OAAgB,OAAZD,EAAyB,KAG3B,cAAC,IAAMN,WAAP,UACE,cAAC,IAAMC,SAAP,UACE,qBAAKO,UAAS,UAAKD,EAAL,iBAAd,SAAyCD,SCoBlCG,EA1BI,SAAC,GAMb,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,UACAC,EACI,EADJA,mBAEA,OACE,cAAC,IAAMd,WAAP,UACE,cAAC,IAAMC,SAAP,UACE,uBAAMc,SAAUL,EAAhB,UACE,yCACQ,uBAAOP,MAAOQ,EAASP,SAAUQ,OAEzC,2CACU,uBAAOT,MAAOU,EAAWT,SAAUU,OAE7C,8BACE,wBAAQP,KAAK,SAAb,2BCHGS,EAfA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACxB,OACE,cAAC,IAAMlB,WAAP,UACE,cAAC,IAAMC,SAAP,UACE,8BACGgB,EAAOE,KADV,IACiBF,EAAOG,OAAQ,IAC9B,wBAAQb,KAAK,SAASc,QAAS,kBAAMH,EAAaD,IAAlD,4BCWKK,EAhBC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,kBAAmBL,EAAmB,EAAnBA,aACpC,OACE,cAAC,IAAMlB,WAAP,UACE,cAAC,IAAMC,SAAP,UACGsB,IAAoBC,KAAI,SAACP,GAAD,OACvB,cAAC,EAAD,CAEEA,OAAQA,EACRC,aAAcA,GAFTD,EAAOE,c,gBCPlBM,EAAU,eAsBhB,IACeC,EADQ,CAAEC,OApBzB,WAEE,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAkBZC,OAfjC,SAAgBC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAaJd,aAVzC,SAAsBkB,GAEpB,OADgBR,IAAMS,OAAN,UAAgBZ,EAAhB,YAA2BW,IAC5BN,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQUM,OALvD,SAAgBF,EAAIG,GAElB,OADgBX,IAAMY,IAAN,UAAaf,EAAb,YAAwBW,GAAMG,GAC/BT,MAAK,SAACC,GAAD,OAAcA,EAASC,UCgI9BS,EA9IH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAO/B,EAAP,KAAgBkC,EAAhB,KACA,EAAkCH,mBAAS,IAA3C,mBAAO7B,EAAP,KAAkBiC,EAAlB,KACA,EAA4BJ,mBAAS,IAArC,mBAAO5C,EAAP,KAAeiD,EAAf,KACA,EAAsDL,mBAAS,MAA/D,mBAAOM,EAAP,KAA4BC,EAA5B,KACA,EAAgDP,mBAAS,MAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,WACR1B,EACGC,SACAG,MAAK,SAACuB,GAAD,OAAoBT,EAAWS,QACtC,IA6FH,SAASC,EAAiBhD,EAASC,GACjC0C,EAAuB3C,GACvB6C,EAAoB5C,GAEpBgD,YAAW,WACTN,EAAuB,MACvBE,EAAoB,QACnB,KAGL,OACE,cAAC,IAAMnD,WAAP,UACE,eAAC,IAAMC,SAAP,WACE,+CACA,cAAC,EAAD,CAAcK,QAAS0C,EAAqBzC,KAAM2C,IAElD,cAAC,EAAD,CAAQpD,OAAQA,EAAQC,mBA7BH,SAACyD,GAC1BT,EAAUS,EAAMC,OAAOtD,UA8BnB,2CACA,cAAC,EAAD,CACEO,UArFU,SAAC8C,GACjBA,EAAME,iBACN,IAAMC,EA3BChB,EAAQiB,MAAK,SAACC,GAAD,OAAOA,EAAE1C,KAAK2C,gBAAkBnD,EAAQmD,iBA6B5D,GAAIH,EAAiB,CACnB,IAAMI,EAAoBC,OAAOC,QAAP,UACrBtD,EADqB,4DAK1B,OAFA2C,EAAiB,WAAD,OAAY3C,GAAW,WAEhCoD,EAhCX,SAAsBG,GACpB,IAAMC,EAAY,2BAAQD,GAAR,IAAwB9C,OAAQP,IAElDa,EACGY,OAAO4B,EAAe9B,GAAI+B,GAC1BrC,MAAK,SAACsC,GACLxB,EACED,EAAQnB,KAAI,SAACqC,GAAD,OAAQA,EAAEzB,KAAOgC,EAAehC,GAAKgC,EAAiBP,SAGrEQ,OAAM,WACLf,EAAiB,kBAAD,OACIY,EAAe/C,KADnB,yCAEd,SAEFyB,EAAWD,EAAQ7C,QAAO,SAAC+D,GAAD,OAAOA,EAAEzB,KAAO8B,EAAe9B,UAG7DS,EAAW,IACXC,EAAa,IAagBwB,CAAaX,GAAmB,KAE3D,IAAMQ,EAAe,CACnBhD,KAAMR,EACNS,OAAQP,GAGVa,EAAeO,OAAOkC,GAAcrC,MAAK,SAACsC,GACxCxB,EAAWD,EAAQ4B,OAAOH,IAC1BvB,EAAW,IACXC,EAAa,IACbQ,EAAiB,SAAD,OAAUc,EAAejD,MAAQ,eAiE/CR,QAASA,EACTC,iBA3CiB,SAAC4C,GACxBX,EAAWW,EAAMC,OAAOtD,QA2ClBU,UAAWA,EACXC,mBAzCmB,SAAC0C,GAC1BV,EAAaU,EAAMC,OAAOtD,UA2CtB,yCACA,cAAC,EAAD,CACEoB,kBAtCR,WACE,OAAIzB,EACK6C,EAAQ7C,QAAO,SAACmB,GAAD,OACpBA,EAAOE,KAAK2C,cAAcU,SAAS1E,EAAOgE,kBAGvCnB,GAiCDzB,aArEa,SAACD,GACA+C,OAAOC,QAAP,iBAAyBhD,EAAOE,KAAhC,OAElBO,EACGR,aAAaD,EAAOmB,IACpBN,MAAK,WACJc,EAAWD,EAAQ7C,QAAO,SAAC+D,GAAD,OAAQA,EAAEzB,KAAOnB,EAAOmB,GAAK,KAAOyB,MAC9DP,EAAiB,WAAD,OAAYrC,EAAOE,MAAQ,YAE5CkD,OAAM,WACLf,EAAiB,kBAAD,OACIrC,EAAOE,KADX,yCAEd,SAEFyB,EAAWD,EAAQ7C,QAAO,SAAC+D,GAAD,OAAOA,EAAEzB,KAAOnB,EAAOmB,mB,MClF3DqC,IAASC,OACP,cAAC,IAAM1E,WAAP,UACE,cAAC,EAAD,MAEF2E,SAASC,eAAe,W","file":"static/js/main.c6354357.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <div>\n          filter shown with:{' '}\n          <input autoFocus value={filter} onChange={handleFilterChange} />\n        </div>\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Notification = ({ message, type }) => {\n  if (message === null) return null;\n\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <div className={`${type} notification`}>{message}</div>\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => {\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <form onSubmit={addPerson}>\n          <div>\n            name: <input value={newName} onChange={handleNameChange} />\n          </div>\n          <div>\n            number: <input value={newNumber} onChange={handleNumberChange} />\n          </div>\n          <div>\n            <button type='submit'>add</button>\n          </div>\n        </form>\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = ({ person, deletePerson }) => {\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <p>\n          {person.name} {person.number}{' '}\n          <button type='button' onClick={() => deletePerson(person)}>\n            delete\n          </button>\n        </p>\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ filterNumbersList, deletePerson }) => {\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        {filterNumbersList().map((person) => (\n          <Person\n            key={person.name}\n            person={person}\n            deletePerson={deletePerson}\n          />\n        ))}\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nfunction getAll() {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n}\n\nfunction create(newPerson) {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((response) => response.data);\n}\n\nfunction deletePerson(id) {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n}\n\nfunction update(id, updatedPerson) {\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson);\n  return request.then((response) => response.data);\n}\n\nconst personsService = { getAll, create, deletePerson, update };\nexport default personsService;\n","import React, { useEffect, useState } from 'react';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport personsService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationType, setNotificationType] = useState(null);\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  function verifyExistence() {\n    return persons.find((p) => p.name.toLowerCase() === newName.toLowerCase());\n  }\n\n  function updatePerson(originalPerson) {\n    const personObject = { ...originalPerson, number: newNumber };\n\n    personsService\n      .update(originalPerson.id, personObject)\n      .then((returnedPerson) => {\n        setPersons(\n          persons.map((p) => (p.id === returnedPerson.id ? returnedPerson : p)),\n        );\n      })\n      .catch(() => {\n        showNotification(\n          `Information of ${originalPerson.name} has already been removed from server`,\n          'error',\n        );\n        setPersons(persons.filter((p) => p.id !== originalPerson.id));\n      });\n\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const existingContact = verifyExistence();\n\n    if (existingContact) {\n      const isUpdateConfirmed = window.confirm(\n        `${newName} is already added to phonebook, replace the old number?`,\n      );\n      showNotification(`Updated ${newName}`, 'success');\n\n      return isUpdateConfirmed ? updatePerson(existingContact) : null;\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personsService.create(personObject).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        showNotification(`Added ${returnedPerson.name}`, 'success');\n      });\n    }\n  };\n\n  const deletePerson = (person) => {\n    const isConfirmed = window.confirm(`Delete ${person.name}?`);\n    if (isConfirmed)\n      personsService\n        .deletePerson(person.id)\n        .then(() => {\n          setPersons(persons.filter((p) => (p.id === person.id ? null : p)));\n          showNotification(`Deleted ${person.name}`, 'error');\n        })\n        .catch(() => {\n          showNotification(\n            `Information of ${person.name} has already been removed from server`,\n            'error',\n          );\n          setPersons(persons.filter((p) => p.id !== person.id));\n        });\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  function filterNumbersList() {\n    if (filter) {\n      return persons.filter((person) =>\n        person.name.toLowerCase().includes(filter.toLowerCase()),\n      );\n    }\n    return persons;\n  }\n\n  function showNotification(message, type) {\n    setNotificationMessage(message);\n    setNotificationType(type);\n\n    setTimeout(() => {\n      setNotificationMessage(null);\n      setNotificationType(null);\n    }, 3000);\n  }\n\n  return (\n    <React.StrictMode>\n      <React.Fragment>\n        <h1>Phonebook App</h1>\n        <Notification message={notificationMessage} type={notificationType} />\n\n        <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n        <h2>Phonebook</h2>\n        <PersonForm\n          addPerson={addPerson}\n          newName={newName}\n          handleNameChange={handleNameChange}\n          newNumber={newNumber}\n          handleNumberChange={handleNumberChange}\n        />\n\n        <h2>Numbers</h2>\n        <Persons\n          filterNumbersList={filterNumbersList}\n          deletePerson={deletePerson}\n        />\n      </React.Fragment>\n    </React.StrictMode>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}